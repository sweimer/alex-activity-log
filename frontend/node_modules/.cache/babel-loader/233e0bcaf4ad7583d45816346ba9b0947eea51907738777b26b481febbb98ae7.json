{"ast":null,"code":"var _jsxFileName = \"/Users/29457/Documents/Sites/0.Sandbox/alex-activity-log/frontend/src/components/ActivityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ActivityForm() {\n  _s();\n  // States to store form data\n  const [summary, setSummary] = useState('');\n  const [mood, setMood] = useState('');\n  const [date, setDate] = useState('');\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    // Data to send to the backend\n    const logData = {\n      summary,\n      mood,\n      date\n    };\n    try {\n      // Send data to the backend server\n      await axios.post('http://localhost:5000/save-log', logData);\n      alert('Activity log saved successfully!');\n\n      // Reset form fields\n      setSummary('');\n      setMood('');\n      setDate('');\n    } catch (error) {\n      console.error('Error saving activity log:', error);\n      alert('Failed to save activity log.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alex Activity Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"summary\",\n      children: \"Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"summary\",\n      value: summary,\n      onChange: e => setSummary(e.target.value),\n      rows: \"5\",\n      cols: \"50\",\n      placeholder: \"Write a summary of today's activities\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"mood\",\n      children: \"Mood:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"mood\",\n      value: mood,\n      onChange: e => setMood(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"happy\",\n        children: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"neutral\",\n        children: \"Neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upset\",\n        children: \"Upset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Activity Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(ActivityForm, \"fw+iycX79bUksZRSMe6/uEJT1zE=\");\n_c = ActivityForm;\nexport default ActivityForm;\nvar _c;\n$RefreshReg$(_c, \"ActivityForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ActivityForm","_s","summary","setSummary","mood","setMood","date","setDate","handleSubmit","e","preventDefault","logData","post","alert","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","rows","cols","placeholder","_c","$RefreshReg$"],"sources":["/Users/29457/Documents/Sites/0.Sandbox/alex-activity-log/frontend/src/components/ActivityForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction ActivityForm() {\n    // States to store form data\n    const [summary, setSummary] = useState('');\n    const [mood, setMood] = useState('');\n    const [date, setDate] = useState('');\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // Prevent default form submission behavior\n\n        // Data to send to the backend\n        const logData = {\n            summary,\n            mood,\n            date,\n        };\n\n        try {\n            // Send data to the backend server\n            await axios.post('http://localhost:5000/save-log', logData);\n            alert('Activity log saved successfully!');\n\n            // Reset form fields\n            setSummary('');\n            setMood('');\n            setDate('');\n        } catch (error) {\n            console.error('Error saving activity log:', error);\n            alert('Failed to save activity log.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Alex Activity Log</h2>\n\n            <label htmlFor=\"date\">Date:</label>\n            <input\n                type=\"date\"\n                id=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                required\n            />\n            <br /><br />\n\n            <label htmlFor=\"summary\">Summary:</label>\n            <textarea\n                id=\"summary\"\n                value={summary}\n                onChange={(e) => setSummary(e.target.value)}\n                rows=\"5\"\n                cols=\"50\"\n                placeholder=\"Write a summary of today's activities\"\n                required\n            />\n            <br /><br />\n\n            <label htmlFor=\"mood\">Mood:</label>\n            <select\n                id=\"mood\"\n                value={mood}\n                onChange={(e) => setMood(e.target.value)}\n                required\n            >\n                <option value=\"\">Select mood</option>\n                <option value=\"happy\">Happy</option>\n                <option value=\"neutral\">Neutral</option>\n                <option value=\"upset\">Upset</option>\n            </select>\n            <br /><br />\n\n            <button type=\"submit\">Save Activity Log</button>\n        </form>\n    );\n}\n\nexport default ActivityForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}